/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colloques.ihm;

import colloques.classesMetier.Participant;
import colloques.dao.ParticipantDAO;
import datechooser.beans.DateChooserPanel;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import static javax.swing.ListSelectionModel.SINGLE_SELECTION;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moreira
 */
public class ModifierParticipantPanel extends javax.swing.JPanel {
    
    ArrayList<Participant> lesParticipants;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    DateChooserPanel dateChooser = new DateChooserPanel();    
    
    /**
     * Creates new panel ConsulterEventPanel 
     */
    public ModifierParticipantPanel() {
        initComponents();             
        chargerDonnees();
        actionModifierDate();
        
        // Limite la selection de lignes à une seule.
        jTable.setSelectionMode(SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable() { 
            public boolean isCellEditable(int row, int column) {
                if(column == 3) {
                    return false;
                }
                return true;
            }
        };
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 442));
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 24)); // NOI18N
        jLabel1.setText("Liste des participants");

        jScrollPane1.setToolTipText("");

        jTable.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        int nbCol = -1;
        jTable.setRowHeight(24);
        jScrollPane1.setViewportView(jTable);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel2.setText("Pour modifier un participant, il suffit de faire un double clic sur l'élément désiré.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                        .addGap(75, 75, 75))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents
        
    public void chargerDonnees() {
        
        ParticipantDAO particiDAO = new ParticipantDAO();
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        lesParticipants = new ArrayList<>(particiDAO.getALL());
        String[] lesEntetes = {"Nom", "Prénom", "Email", "Date de naissance", "Organisation", "Observation"};
        
        for(String entete : lesEntetes) {
            model.addColumn(entete);
        }

        for (int i = 0; i < lesParticipants.size(); i++) {
            model.addRow(new Object[]{
                lesParticipants.get(i).getNom(),
                lesParticipants.get(i).getPrenom(),
                lesParticipants.get(i).getEmail(),
                sdf.format(lesParticipants.get(i).getDate_naiss().getTime()),
                lesParticipants.get(i).getOrganisation(),
                lesParticipants.get(i).getObservation()
            });
        }
        jTable.setModel(model);

        jTable.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {

                int numPart = lesParticipants.get((int) e.getFirstRow()).getNum_pers();
                
                // Date sélectionnée par défaut.                  
                dateChooser.setSelectedDate(lesParticipants.get(jTable.getSelectedRow()).getDate_naiss());
                
                GregorianCalendar gc = new GregorianCalendar();
                gc.setTime(dateChooser.getSelectedDate().getTime());
                
                Participant part = new Participant(
                        numPart,
                        (String) jTable.getValueAt(e.getFirstRow(), 0),
                        (String) jTable.getValueAt(e.getFirstRow(), 1),
                        (String) jTable.getValueAt(e.getFirstRow(), 2),
                        (String) jTable.getValueAt(e.getFirstRow(), 4),
                        (String) jTable.getValueAt(e.getFirstRow(), 5),
                        gc
                );
                
                int annee = Calendar.getInstance().get(Calendar.YEAR);
                
                                        
                        
                if(annee - part.getDate_naiss().get(Calendar.YEAR) < 18) {
                    JOptionPane.showMessageDialog(jTable, "Le participant doit avoir au moins 18 ans.", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
                else {
                    if(!particiDAO.update(part)) {
                        JOptionPane.showMessageDialog(jTable, "Le participant n'a pas pu ètre modifié.", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        });
    }
    
    public void actionModifierDate() {
        jTable.addMouseListener(new MouseAdapter() {
            
            @Override
            public void mousePressed(MouseEvent e1) {

                if (jTable.columnAtPoint(e1.getPoint()) == 3) {
                    if (e1.getClickCount() == 2) {

                        dateChooser.setPreferredSize(new Dimension(350, 200));



                        JOptionPane.showMessageDialog(null, "Le participant doit avoir au moins 18 ans.");
                        JOptionPane.showMessageDialog(null, dateChooser, "Choisir une date", JOptionPane.PLAIN_MESSAGE);

                        if (dateChooser.getSelectedDate() != null) {
                            jTable.setValueAt(sdf.format(dateChooser.getSelectedDate().getTime()), jTable.getSelectedRow(), jTable.getSelectedColumn());
                        }
                    }
                }
            }
        });
    }

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        this.setSize(this.getParent().getSize());
    }//GEN-LAST:event_formAncestorResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
